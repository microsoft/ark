name: "Unit Tests (ROCm)"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  UnitTest:
    runs-on: [ self-hosted, A100 ]
    defaults:
      run:
        shell: bash
    timeout-minutes: 300
    strategy:
      matrix:
        rocm: [ rocm5.7 ]
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}-${{ matrix.rocm }}
      cancel-in-progress: true
    container:
      image: "ghcr.io/microsoft/ark/ark:base-dev-${{ matrix.rocm }}"
      options: --privileged --ipc=host --gpus=all --ulimit memlock=-1:-1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: UpdateSubmodules
        run: |
          git config --global --add safe.directory /__w/ark/ark
          git submodule foreach --recursive git reset --hard  
          git submodule foreach --recursive git clean -fdx
          git submodule update --init --recursive
  
      - name: Build
        run: |
          mkdir build && cd build
          cmake -DCMAKE_BUILD_TYPE=Debug ..
          make -j ut

      - name: RunUT
        run: |
          cd build && ARK_ROOT=$PWD ctest --verbose --schedule-random --stop-time=$(date -Iminutes) -E ".*all_gather.*" -E ".*all_reduce.*" -E ".*reduce_scatter.*" -E ".*sendrecv.*" -E "sched_test"

      - name: ReportCoverage
        run: |
          cd build
          lcov --capture --directory . --output-file coverage.info
          lcov --remove coverage.info \
              '/usr/*' \
              '/tmp/*' \
              '*/third_party/*' \
              '*/ark/*_test.*' \
              '*/examples/*' \
              '*/python/*' \
              '*/ark/unittest/unittest_utils.cc' \
              --output-file coverage.info
          lcov --list coverage.info
          bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"

      - name: BuildPython
        run: |
          python3 -m pip install -r requirements.txt
          python3 -m pip install .
